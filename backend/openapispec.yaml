openapi: 3.0.0
info:
  title: CrowdFuse API
  description: API for CrowdFuse, a community event management platform.
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/auth
    description: Local development server

paths:
  /signup:
    post:
      summary: User Signup
      description: Creates a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                
                password:
                  type: string
                  format: password
                  example: "securePassword123"
      responses:
        "201":
          description: User successfully created
        "400":
          description: Validation error
        "500":
          description: Internal server error

  /login:
    post:
      summary: User Login
      description: Authenticates a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: "securePassword123"
      responses:
        "200":
          description: Successful login, returns JWT token
        "401":
          description: Unauthorized - Incorrect credentials
        "500":
          description: Internal server error

  /toggle-login:
    post:
      summary: Toggle User Login Access
      description: Allows an admin to enable/disable user login access.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        "200":
          description: User login access toggled successfully
        "401":
          description: Unauthorized - Admin access required
        "500":
          description: Internal server error

  /event:
    post:
      summary: Create an event
      description: Creates a new event (authenticated users only).
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Community Meetup"
                description:
                  type: string
                  example: "An event to bring people together."
                date:
                  type: string
                  format: date
                  example: "2025-04-01"
                time:
                  type: string
                  format: time
                  example: "14:00"
      responses:
        "201":
          description: Event created successfully
        "400":
          description: Bad request (validation error)
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /event/title/{title}:
    put:
      summary: Update an event by title
      description: Updates event details by title (authenticated users only).
      security:
        - BearerAuth: []
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "Updated description for the event."
                date:
                  type: string
                  format: date
                  example: "2025-04-02"
                time:
                  type: string
                  format: time
                  example: "15:00"
      responses:
        "200":
          description: Event updated successfully
        "404":
          description: Event not found
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /event/{title}:
    delete:
      summary: Delete an event by title
      description: Deletes an event by title (authenticated users only).
      security:
        - BearerAuth: []
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Event deleted successfully
        "404":
          description: Event not found
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /event/{eventId}/rsvp:
    post:
      summary: RSVP to an event
      description: Allows a user to RSVP for an event.
      security:
        - BearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: RSVP successful
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event not found
        "500":
          description: Internal server error

  /event/{eventId}/rsvp/{usernameToRemove}:
    delete:
      summary: Remove an RSVP
      description: Allows an admin or the user to remove their RSVP from an event.
      security:
        - BearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
        - name: usernameToRemove
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: RSVP removed successfully
        "401":
          description: Unauthorized
        "404":
          description: RSVP not found
        "500":
          description: Internal server error

  /event/user-events:
    get:
      summary: Get events for the logged-in user
      description: Retrieves all events created by the authenticated user.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of user-created events
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /event/{eventId}/remove-attendee/{usernameToRemove}:
    delete:
      summary: Remove an attendee from an event
      description: Allows an organizer to remove an attendee from an event.
      security:
        - BearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
        - name: usernameToRemove
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Attendee removed successfully
        "401":
          description: Unauthorized
        "404":
          description: Attendee not found
        "500":
          description: Internal server error         

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
